services:
  flask:
    image: flask-app:latest
    build: 
      context: ./flask-docker-compose
      dockerfile: Dockerfile
    ports:
      - "7070:8080"
    env_file:
      - ./flask-docker-compose/.env.dev
    secrets:
      - api_key
    environment:
      - APP_VERSION=0.1.0
      - DB_HOST=postgres
      - DB_DATABASE=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
    volumes:
      - ./flask-docker-compose/config-dev.yml:/config-dev.yml
    networks:
      - private
      - public
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16.3
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_DB=mydb
      - POSTGRES_PASSWORD=mypassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - private
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

secrets:
  api_key:
    file: ./flask-docker-compose/api_key.txt

volumes:
  postgres-data:

networks:
  public:
  private:
    internal: true